% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/exp-G.R
\name{exp_G}
\alias{exp_G}
\title{Generates the density distribution or the accumulated distribution function Exp-G}
\usage{
exp_G(G, density = FALSE)
}
\arguments{
\item{G}{Cumulative distribution function (baseline)}

\item{density}{By default, \code{density = FALSE}, that is, it returns the cumulative
distribution function \eqn{Exp-G}. If \code{density = TRUE}, then the \eqn{Exp-G} density
function will be reinforced.}
}
\value{
The probability density function or the cumulative distribution
function will be returned.
}
\description{
Generates the density distribution or the accumulated distribution function Exp-G
}
\details{
This function generates the probability density function or the
accumulated distribution function \eqn{Exp-G}, for any specified \eqn{G}.
Exp-G will have one more parameter, being it \eqn{s > 0}.
}
\examples{
cdf_w <- function(x, beta, lambda) {
  1 - exp(-(lambda * x)^beta)
}

# Exp-Weibull density:
pdf_exp_w <- exp_G(G = cdf_w, density = TRUE)

# Testing if exp_w is density:
integrate(
   f = pdf_exp_w,
   lower = 0,
   upper = Inf,
   beta = 1.2,
   lambda = 1.3,
   s = 2.1
)

# Exp-Weibull (accumulated distribution):
cdf_exp_w <- exp_G(G = cdf_w, density = FALSE)

# Testing whether it is cumulative distribution:
cdf_exp_w(x = 0, beta = 1.2, lambda = 1.3, s = 2.1) # in 0
cdf_exp_w(x = Inf, beta = 1.2, lambda = 1.3, s = 2.1) # in Inf
}
